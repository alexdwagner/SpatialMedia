Function.prototype.bind||(Function.prototype.bind=function(a){if("function"!==typeof this)throw new TypeError("Function.prototype.bind - what is trying to be bound is not callable");var b=Array.prototype.slice.call(arguments,1),c=this,d=function(){},e=function(){return c.apply(this instanceof d?this:a||window,b.concat(Array.prototype.slice.call(arguments)))};d.prototype=this.prototype;e.prototype=new d;return e});var window=window||void 0;
window&&!window.getQueryString&&(window.getQueryString=function(a){if(window.location)return a=a.replace(/[\[]/,"\\[").replace(/[\]]/,"\\]"),a=RegExp("[\\?&]"+a+"=([^&#]*)").exec(window.location.href),null==a?"":a[1]});var WebSocket=WebSocket||{},Spacebrew=Spacebrew||{};
Spacebrew.Client=function(a,b,c){console.log("building Spacebrew object");this._name=b||"javascript client";window&&(this._name=""!==window.getQueryString("name")?unescape(window.getQueryString("name")):this._name);this._description=c||"spacebrew javascript client";window&&(this._description=""!==window.getQueryString("description")?unescape(window.getQueryString("description")):this._description);this.server=a||"sandbox.spacebrew.cc";window&&(this.server=""!==window.getQueryString("server")?unescape(window.getQueryString("server")):
this.server);this.socket=null;this.config={name:this._name,description:this._description,publish:{messages:[]},subscribe:{messages:[]}};this._isConnected=!1};Spacebrew.Client.prototype.connect=function(){try{this.socket=new WebSocket("ws://"+this.server+":9000"),this.socket.onopen=this._onOpen.bind(this),this.socket.onmessage=this._onMessage.bind(this),this.socket.onclose=this._onClose.bind(this)}catch(a){this._isConnected=!1,console.log("[Spacebrew.connect] connection attempt failed")}};
Spacebrew.Client.prototype.onOpen=function(){};Spacebrew.Client.prototype.onClose=function(){};Spacebrew.Client.prototype.onRangeMessage=function(){};Spacebrew.Client.prototype.onBooleanMessage=function(){};Spacebrew.Client.prototype.onStringMessage=function(){};Spacebrew.Client.prototype.onCustomMessage=function(){};Spacebrew.Client.prototype.addPublish=function(a,b,c){this.config.publish.messages.push({name:a,type:b,"default":c});this.updatePubSub()};
Spacebrew.Client.prototype.addSubscribe=function(a,b){this.config.subscribe.messages.push({name:a,type:b});this.updatePubSub()};Spacebrew.Client.prototype.updatePubSub=function(){this._isConnected&&this.socket.send(JSON.stringify({config:this.config}))};Spacebrew.Client.prototype.send=function(a,b,c){this.socket.send(JSON.stringify({message:{clientName:this._name,name:a,type:b,value:c}}))};
Spacebrew.Client.prototype._onOpen=function(){console.log("WebSockets connection opened");console.log("my name is: "+this._name);this._isConnected=!0;this.updatePubSub();this.onOpen()};
Spacebrew.Client.prototype._onMessage=function(a){var b=JSON.parse(a.data).message.name,c=JSON.parse(a.data).message.type;a=JSON.parse(a.data).message.value;switch(c){case "boolean":this.onBooleanMessage(b,Boolean(a));break;case "string":this.onStringMessage(b,a);break;case "range":this.onRangeMessage(b,Number(a));break;default:this.onCustomMessage(b,a)}};Spacebrew.Client.prototype._onClose=function(){console.log("WebSockets connection closed");this._isConnected=!1;this.onClose()};
Spacebrew.Client.prototype.name=function(a){a&&(this._name=a);return this._name};Spacebrew.Client.prototype.description=function(a){if(a){if(this._isConnected)return!1;this._description=a;this.config.description=this._description}return this._description};Spacebrew.Client.prototype.isConnected=function(){return this._isConnected};var module=module||void 0;!window&&module&&(WebSocket=require("ws"),module.exports={Spacebrew:Spacebrew});